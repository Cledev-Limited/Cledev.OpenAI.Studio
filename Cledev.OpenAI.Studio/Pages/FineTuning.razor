@page "/fine-tuning"

@inherits FineTuningPage

<PageTitle>Fine-Tuning</PageTitle>

<PageHeader Icon="fa-solid fa-screwdriver-wrench">Fine-Tuning</PageHeader>

<p class="mb-4">Manage fine-tuning jobs to tailor a model to your specific training data. Related guide: <a href="https://platform.openai.com/docs/guides/fine-tuning" title="Fine-tune models" target="_blank">Fine-tune models</a>.</p>

@if (IsProcessing)
{
    <button id="OpenCreateFineTuneModal" type="button" class="btn btn-primary" disabled>Create Fine-Tune</button>
    <button id="RefreshList" type="button" class="btn btn-primary" disabled>Refresh List</button>

    <div id="FineTunesLoading" class="my-4">
        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
        <span>Loading Fine-tunes...</span>
    </div>
}

@if (Error is null && IsProcessing is false)
{
    <button id="OpenCreateFineTuneModal" type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#CreateFineTuneModal" @onclick="FakeClick">Create Fine-Tune</button>
    <button id="RefreshList" type="button" class="btn btn-primary" @onclick="LoadFineTunes">Refresh List</button>

    <div class="row my-4">
        <div class="col">
            @if (FineTunes.Any())
            {
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th scope="col" class="text-center">&nbsp;</th>
                            <th scope="col">Id</th>
                            <th scope="col">Base Model</th>
                            <th scope="col">Fine-tuned Model</th>
                            <th scope="col">Status</th>
                            <th scope="col">Created</th>
                            <th scope="col">Updated</th>
                            <th scope="col">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var index = 0; index < FineTunes.Count; index++)
                        {
                            var fineTune = FineTunes[index];
                            <tr>
                                <th scope="row" class="text-end">@(index + 1)</th>
                                <td id="fineTune@(index + 1)Id">@fineTune.Id</td>
                                <td>@fineTune.Model</td>
                                <td>@fineTune.FineTunedModel</td>
                                <td>@fineTune.Status</td>
                                <td>@fineTune.CreatedAt.ToDateTime()</td>
                                <td>@fineTune.UpdatedAt.ToDateTime(fineTune.CreatedAt)</td>
                                <td class="text-nowrap">
                                    <a id="OpenFineTuneDetailsModal" class="me-0" title="Fine-Tunes Details" href="#" @onclick:preventDefault="true" @onclick="() => LoadFineTuneDetails(fineTune.Id)" data-bs-toggle="modal" data-bs-target="#FineTuneDetailsModal">
                                        <i class="fa-solid fa-magnifying-glass"></i>
                                    </a>
                                    <a id="OpenFineTuneEventsModal" class="me-1" title="Fine-Tunes Events" href="#" @onclick:preventDefault="true" @onclick="() => LoadFineTuneEvents(fineTune.Id)" data-bs-toggle="modal" data-bs-target="#FineTuneEventsModal">
                                        <i class="fa-regular fa-calendar-check"></i>
                                    </a>
                                    @if (fineTune.Status is "running" or "pending")
                                    {
                                        <a id="OpenCancelFineTuneJobModal" title="Cancel Job" href="#" @onclick:preventDefault="true" @onclick="() => SetFineTuneIdToCancel(fineTune.Id)" data-bs-toggle="modal" data-bs-target="#CancelFineTuneJobModal">
                                            <i class="fa-solid fa-xmark"></i>
                                        </a>
                                    }
                                    else if (fineTune.Status is "cancelled")
                                    {
                                        <literal>&nbsp;</literal>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="alert alert-secondary" role="alert">
                    No fine-tunes found
                </div>
            }
        </div>
    </div>
}

<Error Model="Error"></Error>

<EditForm Model="CreateFineTuneRequest" OnValidSubmit="OnSubmitAsync">
    <div class="modal fade" id="CreateFineTuneModal" tabindex="-1" aria-labelledby="CreateFineTuneModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="CreateFineTuneModalLabel">Create Fine-Tune</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row mb-3">
                        <FormLabel InputId="Model" InColumn="true" Tooltip="@Tooltips.Model">Base Model</FormLabel>
                        <div class="col-sm">
                            <InputSelect id="Model" @bind-Value="CreateFineTuneRequest.Model" class="form-select">
                                @foreach (var item in FineTuningModels)
                                {
                                    <option value="@item">@item</option>
                                }
                            </InputSelect>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <FormLabel InputId="TrainingFile" InColumn="true" Tooltip="@Tooltips.TrainingFile">Training File</FormLabel>
                        <div class="col-sm">
                            <InputSelect id="TrainingFile" @bind-Value="CreateFineTuneRequest.TrainingFile" class="form-select">
                                @foreach (var item in ExistingFiles)
                                {
                                    <option value="@item.FileId">@item.FileDisplayName</option>
                                }
                            </InputSelect>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <FormLabel InputId="ValidationFile" InColumn="true" Tooltip="@Tooltips.ValidationFile">Validation File</FormLabel>
                        <div class="col-sm">
                            <InputSelect id="ValidationFile" @bind-Value="CreateFineTuneRequest.ValidationFile" class="form-select">
                                <option value="">&lt;None&gt;</option>
                                @foreach (var item in ExistingFiles)
                                {
                                    <option value="@item.FileId">@item.FileDisplayName</option>
                                }
                            </InputSelect>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <FormLabel InputId="Suffix" InColumn="true" Tooltip="@Tooltips.Suffix">Suffix</FormLabel>
                        <div class="col-sm">
                            <InputText id="Suffix" @bind-Value="CreateFineTuneRequest.Suffix" class="form-control" />
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <FormLabel InputId="NEpochs" InColumn="true" Tooltip="@Tooltips.NEpochs">NEpochs</FormLabel>
                        <div class="col-sm">
                            <InputNumber id="NEpochs" @bind-Value="CreateFineTuneRequest.NEpochs" class="form-control" />
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <FormLabel InputId="BatchSize" InColumn="true" Tooltip="@Tooltips.BatchSize">Batch Size</FormLabel>
                        <div class="col-sm">
                            <InputNumber id="BatchSize" @bind-Value="CreateFineTuneRequest.BatchSize" class="form-control" />
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <FormLabel InputId="LearningRateMultiplier" InColumn="true" Tooltip="@Tooltips.LearningRateMultiplier">Learning Rate Multiplier</FormLabel>
                        <div class="col-sm">
                            <InputNumber id="LearningRateMultiplier" @bind-Value="CreateFineTuneRequest.LearningRateMultiplier" class="form-control" />
                        </div>
                    </div>

                    <div class="row mb-3">
                        <FormLabel InputId="PromptLossWeight" InColumn="true" Tooltip="@Tooltips.PromptLossWeight">Prompt Loss Weight</FormLabel>
                        <div class="col-sm">
                            <InputNumber id="PromptLossWeight" @bind-Value="CreateFineTuneRequest.PromptLossWeight" class="form-control" />
                        </div>
                    </div>

                    <div class="row mb-3">
                        <FormLabel InputId="ComputeClassificationMetrics" InColumn="true" Tooltip="@Tooltips.ComputeClassificationMetrics">Compute Classification Metrics</FormLabel>
                        <div class="col-sm">
                            <InputCheckbox id="ComputeClassificationMetrics" @bind-Value="CreateFineTuneRequest.ComputeClassificationMetrics" class="form-check-input" />
                        </div>
                    </div>

                    <div class="row mb-3">
                        <FormLabel InputId="ClassificationNClasses" InColumn="true" Tooltip="@Tooltips.ClassificationNClasses">Classification N Classes</FormLabel>
                        <div class="col-sm">
                            <InputNumber id="ClassificationNClasses" @bind-Value="CreateFineTuneRequest.ClassificationNClasses" class="form-control" />
                        </div>
                    </div>

                    <div class="row mb-3">
                        <FormLabel InputId="ClassificationPositiveClass" InColumn="true" Tooltip="@Tooltips.ClassificationPositiveClass">Classification Positive Class</FormLabel>
                        <div class="col-sm">
                            <InputText id="ClassificationPositiveClass" @bind-Value="CreateFineTuneRequest.ClassificationPositiveClass" class="form-control" />
                        </div>
                    </div>

                    <div class="row mb-3">
                        <FormLabel InputId="ClassificationBetas" InColumn="true" Tooltip="@Tooltips.ClassificationBetas">Classification Betas</FormLabel>
                        <div class="col-sm">
                            @if (CreateFineTuneRequest.ClassificationBetas is not null)
                            {
                                @foreach (var classificationBeta in CreateFineTuneRequest.ClassificationBetas!)
                                {
                                    <div class="mb-1">
                                        <span class="me-2">@classificationBeta</span>
                                        <a href="#" @onclick:preventDefault="true" @onclick="() => RemoveClassificationBeta(classificationBeta)">
                                            <i class="fa-regular fa-trash-can"></i>
                                        </a>
                                    </div>
                                }
                            }
                            <div class="input-group">
                                <input type="text" id="ClassificationBeta" placeholder="Add Value" @bind="ClassificationBeta" class="form-control"/>
                                <button type="submit" class="btn btn-primary text-nowrap" @onclick:preventDefault="true" @onclick="AddClassificationBeta">
                                    <i class="fa-solid fa-plus"></i>
                                </button>
                            </div>
                        </div>
                    </div>

                    <Error Model="CreateError"></Error>
                </div>
                <div class="modal-footer">
                    @if (IsCreating)
                    {
                        <button id="CreateFineTune" class="btn btn-primary text-nowrap" type="button" disabled>
                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                            Creating Fine-Tune...
                        </button>
                    }
                    else
                    {
                        <button id="CreateFineTune" type="submit" class="btn btn-primary">Create Fine-Tune</button>
                    }
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

<div class="modal fade" id="CancelFineTuneJobModal" tabindex="-1" aria-labelledby="CancelFineTuneJobLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="CancelFineTuneJobLabel">Cancel Job</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to cancel the job for <span class="fw-bold">@FineTuneIdToCancel</span>?
                <Error Model="CancelError"></Error>
            </div>
            <div class="modal-footer">
                @if (IsCancelling)
                {
                    <button class="btn btn-warning text-nowrap" type="button" disabled>
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        Cancelling Fine-Tune Job...
                    </button>
                }
                else
                {
                    <button id="CancelFineTuneJob" type="submit" class="btn btn-warning" @onclick="async () => await CancelFineTuneJob()">Cancel</button>
                }
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<GenericModal Id="FineTuneDetails" Title="Fine-tune Details">
    @if (FineTuneResponse is not null && InfoError is null)
    {
        <div class="card d-flex">
            <div class="card-header">
                Info
            </div>
            <div class="card-body">
                <div>
                    <span class="fw-bold">Id</span>: @FineTuneResponse.Id
                </div>
                <div>
                    <span class="fw-bold">Fine-Tune Model</span>: @FineTuneResponse.FineTunedModel
                </div>
                <div>
                    <span class="fw-bold">Base Model</span>: @FineTuneResponse.Model
                </div>
                <div>
                    <span class="fw-bold">Status</span>: @FineTuneResponse.Status
                </div>
                <div>
                    <span class="fw-bold">Created</span>: @FineTuneResponse.CreatedAt.ToDateTime()
                </div>
                <div>
                    <span class="fw-bold">Updated</span>: @FineTuneResponse.UpdatedAt?.ToDateTime()
                </div>
            </div>
        </div>

        @if (FineTuneResponse.HyperParams is not null)
        {
            <div class="card d-flex mt-3">
                <div class="card-header">
                    Hyper Params
                </div>
                <div class="card-body">
                    <div>
                        <span class="fw-bold">N Epochs</span>:
                        @if (FineTuneResponse.HyperParams.NEpochs is not null)
                        {
                            @FineTuneResponse.HyperParams.NEpochs
                        }
                        else
                        {
                            <literal>&lt;null&gt;</literal>
                        }
                    </div>
                    <div>
                        <span class="fw-bold">Batch Size</span>:
                        @if (FineTuneResponse.HyperParams.BatchSize is not null)
                        {
                            @FineTuneResponse.HyperParams.BatchSize
                        }
                        else
                        {
                            <literal>&lt;null&gt;</literal>
                        }
                    </div>
                    <div>
                        <span class="fw-bold">Learning Rate Multiplier</span>:
                        @if (FineTuneResponse.HyperParams.LearningRateMultiplier is not null)
                        {
                            @FineTuneResponse.HyperParams.LearningRateMultiplier
                        }
                        else
                        {
                            <literal>&lt;null&gt;</literal>
                        }
                    </div>
                    <div>
                        <span class="fw-bold">Prompt Loss Weight</span>:
                        @if (FineTuneResponse.HyperParams.PromptLossWeight is not null)
                        {
                            @FineTuneResponse.HyperParams.PromptLossWeight
                        }
                        else
                        {
                            <literal>&lt;null&gt;</literal>
                        }
                    </div>
                </div>
            </div>
        }

        <div class="card d-flex mt-3">
            <div class="card-header">
                Training Files
            </div>
            <div class="card-body">
                <FilesTable Files="FineTuneResponse.TrainingFiles"></FilesTable>
            </div>
        </div>

        @if (FineTuneResponse.ValidationFiles.Any())
        {
            <div class="card d-flex mt-3">
                <div class="card-header">
                    Validation Files
                </div>
                <div class="card-body">
                    <FilesTable Files="FineTuneResponse.ValidationFiles"></FilesTable>
                </div>
            </div>
        }
    }
    <Error Model="InfoError"></Error>
</GenericModal>

<GenericModal Id="FineTuneEvents" Title="Fine-Tune Events">
    @if (ListFineTuneEventsResponse is not null && InfoError is null)
    {
        <table class="table">
            <thead>
            <tr>
                <th scope="col" class="text-center">&nbsp;</th>
                <th scope="col">Level</th>
                <th scope="col">Message</th>
                <th scope="col">Created</th>
            </tr>
            </thead>
            <tbody>
            @for (var index = 0; index < ListFineTuneEventsResponse.Data.Count; index++)
            {
                var fineTuneEvent = ListFineTuneEventsResponse.Data[index];
                <tr>
                    <th scope="row" class="text-end">@(index + 1)</th>
                    <td>@fineTuneEvent.Level</td>
                    <td>@fineTuneEvent.Message</td>
                    <td>@fineTuneEvent.CreatedAt.ToDateTime()</td>
                </tr>
            }
            </tbody>
        </table>
    }
    <Error Model="InfoError"></Error>
</GenericModal>
                        