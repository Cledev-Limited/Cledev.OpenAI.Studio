@page "/edits"

@using Cledev.OpenAI.V1.Helpers
@inherits EditsPage

<PageTitle>Edits</PageTitle>

<PageHeader Icon="fa-regular fa-pen-to-square">Edits</PageHeader>

<p class="mb-4">Given a prompt and an instruction, the model will return an edited version of the prompt.</p>

<EditForm Model="Request" OnValidSubmit="OnSubmitAsync">
    <div class="row">
        <div class="col-md-3 border-end pe-4 d-none d-md-block">
            <EditsOptions Request="Request" EditModels="EditModels" InColumn="false"></EditsOptions>
        </div>
        <div class="col-md-9 col-sm-12 ps-md-4">
            <div class="mb-3">
                <FormLabel InputId="Input" Tooltip="@Tooltips.Input" ExtraInfo="Optional">Input</FormLabel>
                <InputText id="Input" @bind-Value="Request.Input" class="form-control" />
            </div>
            <div class="mb-3">
                <FormLabel InputId="Instruction" Tooltip="@Tooltips.Instruction">Instruction</FormLabel>
                <InputText id="Instruction" @bind-Value="Request.Instruction" class="form-control" />
            </div>

            <div class="row">
                <div class="col-auto">
                    <SubmitButton Text="Create Edit"
                                  ProcessingText="Creating Edit..."
                                  IsProcessing="IsProcessing">
                    </SubmitButton>
                </div>
                <div class="col-auto p-0 d-block d-sm-block d-md-none">
                    <OptionsButton IsProcessing="IsProcessing"></OptionsButton>
                </div>
            </div>

            @if (Response is not null && Error is null)
            {
                <div class="row mt-4">
                    <div class="col">
                        <h4>Response</h4>

                        @for (var index = 0; index < Response.Choices.Count; index++)
                        {
                            var choice = Response.Choices[index];
                            <div class="card d-flex mt-3">
                                <div class="card-header">
                                    Choice @(index + 1)
                                </div>
                                <div class="card-body">
                                    <div class="mb-3">
                                        @if (Request.Model == EditsModel.CodeDavinciEditV1.ToStringModel())
                                        {
                                            <pre>@choice.Text</pre>
                                        }
                                        else
                                        {
                                            @choice.Text
                                        }
                                    </div>
                                    <span class="fw-bold">Index</span>: @choice.Index<br />
                                </div>
                            </div>
                        }

                        <div class="card d-flex mt-3">
                            <div class="card-header">
                                Info
                            </div>
                            <div class="card-body">
                                <span class="fw-bold">Object</span>: @Response.Object<br />
                                <span class="fw-bold">Created</span>: @Response.Created<br />
                            </div>
                        </div>

                        <div class="card d-flex mt-3">
                            <div class="card-header">
                                Usage
                            </div>
                            <div class="card-body">
                                <span class="fw-bold">Prompt Tokens</span>: @Response.Usage.PromptTokens<br />
                                <span class="fw-bold">Completion Tokens</span>: @Response.Usage.CompletionTokens<br />
                                <span class="fw-bold">Total Tokens</span>: @Response.Usage.TotalTokens
                            </div>
                        </div>
                    </div>
                </div>
            }

            <Error Model="Error"></Error>
        </div>
    </div>    

    <OptionsModal>
        <EditsOptions Request="Request" EditModels="EditModels" InColumn="true"></EditsOptions>
    </OptionsModal>
</EditForm>
